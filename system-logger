#!/bin/bash


function startup {
    if ! [[ -d ~/.config ]]; then
        mkdir ~/.config
    fi
    if ! [[ -f ~/.config/resource-logger.conf ]]; then
        echo "time_interval=60" > ~/.config/resource-logger.conf
        echo "log_dir=$HOME/.cache/system-logs" >> ~/.config/resource-logger.conf
    fi
}

startup
# Define variables
time_interval=0
log_dir=""
# Read config file
while read line; do
    if [[ $line =~ ^time_interval=([0-9]+) ]]; then
        time_interval=${BASH_REMATCH[1]}
    elif [[ $line =~ ^log_dir=(.+) ]]; then
        log_dir=${BASH_REMATCH[1]}
    fi
done < ~/.config/resource-logger.conf
if ! [[ -f $log_dir ]]; then
    mkdir -p "$log_dir"
fi
while true; do
    today=$(date +"%Y-%m-%d")
    while true; do
        if ! [[ -f $log_dir/$today"_system_resources.log" ]]; then
            echo "timestamp,up,users,load average 1,load average 5,load average 15,Tasks total,Tasks running,Tasks sleeping,Tasks stopped,Tasks zombie,%Cpu(s) us,%Cpu(s) sy,%Cpu(s) ni,%Cpu(s) id,%Cpu(s) wa,%Cpu(s) hi,%Cpu(s) si,%Cpu(s) st,MiB Mem total,MiB Mem free,MiB Mem used,MiB Mem buff/cache,MiB Swap total,MiB Swap free,MiB Swap used,avail Mem" > $log_dir/$today"_system_resources.log"
        fi
        top_out=$(top -bn1 | grep -Eo "([0-9:]+ up +[0-9:]+, +[0-9]+ +users, +load average:.*)|(Tasks:.*)|(%Cpu\(s\):.*)|(MiB Mem :.*)|(MiB Swap:.*)" | tr "\n" " ")
        timestamp=$(echo $(date +"%Y-%m-%d") $(echo $top_out | grep -Po "[0-9:]+(?= up)"))
        IFS=' '
        read -a timestamp_arr <<< $timestamp
        if ! [[ ${timestamp_arr[0]} == $today ]]; then
            break
        fi
        up=$(echo $top_out | grep -Po "(?<=up )[0-9:]+")
        users=$(echo $top_out | grep -Po "[0-9]+(?= users)")
        load_average=$(echo $top_out | grep -Po "(?<=load average: )[0-9., ]+(?= )")
        IFS=' ,'
        read -a load_average_arr <<< $load_average
        load_average_1=${load_average_arr[0]}
        load_average_5=${load_average_arr[1]}
        load_average_15=${load_average_arr[2]}
        Tasks_total=$(echo $top_out | grep -Po "(?<=Tasks: )[0-9]+(?= total)")
        Tasks_running=$(echo $top_out | grep -Po "[0-9]+(?= running)")
        Tasks_sleeping=$(echo $top_out | grep -Po "[0-9]+(?= sleeping)")
        Tasks_stopped=$(echo $top_out | grep -Po "[0-9]+(?= stopped)")
        Tasks_zombie=$(echo $top_out | grep -Po "[0-9]+(?= zombie)")
        Cpus_us=$(echo $top_out | grep -Po "[0-9.]+(?= us )")
        Cpus_sy=$(echo $top_out | grep -Po "[0-9.]+(?= sy )")
        Cpus_ni=$(echo $top_out | grep -Po "[0-9.]+(?= ni )")
        Cpus_id=$(echo $top_out | grep -Po "[0-9.]+(?= id )")
        Cpus_wa=$(echo $top_out | grep -Po "[0-9.]+(?= wa )")
        Cpus_hi=$(echo $top_out | grep -Po "[0-9.]+(?= hi )")
        Cpus_si=$(echo $top_out | grep -Po "[0-9.]+(?= si )")
        Cpus_st=$(echo $top_out | grep -Po "[0-9.]+(?= st )")
        MiB_Mem_total=$(echo $top_out | grep -Po "(?<=MiB Mem : )[0-9.]+(?= total)")
        MiB_Mem_free=$(echo $top_out | grep -Po "[0-9.]+(?= free)" | head -n 1)
        MiB_Mem_used=$(echo $top_out | grep -Po "[0-9.]+(?= used )")
        MiB_Mem_buff_cache=$(echo $top_out | grep -Po "[0-9.]+(?= buff)")
        MiB_Swap_total=$(echo $top_out | grep -Po "(?<=MiB Swap: )[0-9.]+(?= total)")
        MiB_Swap_free=$(echo $top_out| grep -Po "[0-9.]+(?= free)" | tail -n 1)
        MiB_Swap_used=$(echo $top_out | grep -Po "[0-9.]+(?= used\.)")
        avail_Mem=$(echo $top_out | grep -Po "[0-9.]+(?= avail Mem)")
        echo $timestamp","$up","$users","$load_average_1","$load_average_5","$load_average_15","$Tasks_total","$Tasks_running","$Tasks_sleeping","$Tasks_stopped","$Tasks_zombie","$Cpus_us","$Cpus_sy","$Cpus_ni","$Cpus_id","$Cpus_wa","$Cpus_hi","$Cpus_si","$Cpus_st","$MiB_Mem_total","$MiB_Mem_free","$MiB_Mem_used","$MiB_Mem_buff_cache","$MiB_Swap_total","$MiB_Swap_free","$MiB_Swap_used","$avail_Mem >> $log_dir/$today"_system_resources.log"
        sleep $time_interval
    done
done
